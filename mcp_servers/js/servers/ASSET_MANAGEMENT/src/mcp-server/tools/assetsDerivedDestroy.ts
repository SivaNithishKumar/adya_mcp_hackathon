/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { assetsDerivedDestroy } from "../../funcs/assetsDerivedDestroy.js";
import * as components from "../../models/components/index.js";
import { formatResult, ToolDefinition } from "../tools.js";
import * as z from "zod";

const args = {
  apiKey: z.string().describe("Cloudinary API Key"),
  apiSecret: z.string().describe("Cloudinary API Secret"),
  cloudName: z.string().optional().describe("Cloudinary Cloud Name"),
  request: components.DerivedDestroyRequest$inboundSchema,
};

export const tool$assetsDerivedDestroy: ToolDefinition<typeof args> = {
  name: "delete-derived-assets",
  description: `Delete derived resources

Deletes derived resources by derived resource ID`,
  scopes: ["librarian"],
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await assetsDerivedDestroy(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
